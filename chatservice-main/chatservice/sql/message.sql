DROP TABLE CHANNEL CASCADE CONSTRAINTS;
DROP TABLE CHANNEL_AUTH CASCADE CONSTRAINTS;
DROP TABLE MESSAGE CASCADE CONSTRAINTS;
DROP TABLE MESSAGE_MEDIA CASCADE CONSTRAINTS;
DROP TABLE GROUP_CHAT CASCADE CONSTRAINTS;
DROP TABLE GROUP_CHAT_USER CASCADE CONSTRAINTS;
DROP TABLE REACTION CASCADE CONSTRAINTS;
DROP TABLE REACTION_LOG CASCADE CONSTRAINTS;
DROP VIEW DISPLAY_MESSAGE;
DROP VIEW GROUP_MESSAGE;
DROP TABLE SERVER_MEMBER CASCADE CONSTRAINTS;

CREATE TABLE CHANNEL( -- 체널
    CHANNEL_ID VARCHAR2(36), -- 체널 아이디(PK)
    CHANNEL_NAME VARCHAR2(20), -- 체널 이름 (UK)
    CHANNEL_SERVER VARCHAR2(36), -- 소속 서버 (FK)
    -- UK: 체널 이름, 소속 서버
    CHANNEL_REG_DATE DATE, -- 체널 등록일
    PRIMARY KEY(CHANNEL_ID),
    CONSTRAINT CHANNEL_NAME_UK UNIQUE(CHANNEL_NAME, CHANNEL_SERVER),
    FOREIGN KEY (CHANNEL_SERVER)
        REFERENCES SERVER(SERVER_ID)
        ON DELETE CASCADE
);

CREATE TABLE SERVER_MEMBER( -- 서버 멤버
  SERVER_MEMBER_USER VARCHAR2(36), -- 서버 사용자 (FK: 사용자 아이디)
  SERVER_MEMBER_SERVER VARCHAR2(36), -- 서버 (FK: 서버 아이디)
  -- PK: 서버사용자, 서버
  SERVER_MEMBER_REG_DATE DATE, -- 서버 가입 날짜
  SERVER_MEMBER_USER_NAME VARCHAR2(40), -- 서버에서 사용 하는 사용자 이름
  SERVER_MEMBER_PFP VARCHAR2(36), -- 프사
  SERVER_MEMBER_LAST_VISITED VARCHAR(36), -- 마지막으로 방문한 채널
  PRIMARY KEY(SERVER_MEMBER_USER, SERVER_MEMBER_SERVER),
  FOREIGN KEY(SERVER_MEMBER_USER)
   REFERENCES APPUSER(APPUSER_ID)
   ON DELETE CASCADE,
  FOREIGN KEY(SERVER_MEMBER_SERVER)
   REFERENCES SERVER(SERVER_ID)
   ON DELETE CASCADE,
  FOREIGN KEY(SERVER_MEMBER_LAST_VISITED)
   REFERENCES CHANNEL(CHANNEL_ID)
   ON DELETE CASCADE
);

CREATE TABLE CHANNEL_AUTH( -- 체널 권한
    CHANNEL_AUTH_CHANNEL VARCHAR2(36), -- 체널 아이디 (FK)
    CHANNEL_AUTH_USER VARCHAR2(36), -- 사용자 아이디 (FK)
    -- PK: 처널아이디, 사용자아이디
    CHANNEL_AUTH_ACCESSIBLE NUMBER DEFAULT 0, -- 접근 가능 여부 디폴트 0
    PRIMARY KEY(CHANNEL_AUTH_CHANNEL, CHANNEL_AUTH_USER),
    FOREIGN KEY (CHANNEL_AUTH_CHANNEL)
        REFERENCES CHANNEL(CHANNEL_ID)
        ON DELETE CASCADE,
    FOREIGN KEY (CHANNEL_AUTH_USER)
        REFERENCES APPUSER(APPUSER_ID)
        ON DELETE CASCADE
);

CREATE TABLE GROUP_CHAT( -- 그룹챗 및 DM
    GROUP_CHAT_ID VARCHAR2(36), -- 그룹 아이디 (PK)
    GROUP_CHAT_CREATOR VARCHAR2(36), -- 그룹 챗 생성자 (FK)
    GROUP_CHAT_NAME VARCHAR2(40), -- 그룹 챗 이름 
    PRIMARY KEY(GROUP_CHAT_ID),
    FOREIGN KEY (GROUP_CHAT_CREATOR)
        REFERENCES APPUSER(APPUSER_ID)
        ON DELETE CASCADE
);

CREATE TABLE GROUP_CHAT_USER( -- 그룹챗 유저
    GROUP_CHAT_USER VARCHAR2(36), -- 그룹챗 소속 유저(FK)
    GROUP_CHAT_USER_GROUP VARCHAR2(36), -- 그룹챗 (FK)
    -- PK: 그룹챗 소속 유저, 그룹챗
    PRIMARY KEY(GROUP_CHAT_USER, GROUP_CHAT_USER_GROUP),
    FOREIGN KEY (GROUP_CHAT_USER)
        REFERENCES APPUSER(APPUSER_ID)
        ON DELETE CASCADE,
    FOREIGN KEY (GROUP_CHAT_USER_GROUP)
        REFERENCES GROUP_CHAT(GROUP_CHAT_ID)
        ON DELETE CASCADE
);

CREATE TABLE MESSAGE( -- 메세지 
    MESSAGE_ID VARCHAR2(36), -- 메세지 아이디 (PK)
    MESSAGE_CHANNEL VARCHAR2(36), -- 소속 채널 (FK)
    MESSAGE_GROUP_CHAT VARCHAR2(36), -- 소속 그룹 챗 (FK)
    -- 소속 체널, 소속 그룹 챗 둘 중에 하나만 값이 입력 되야함
    MESSAGE_USER VARCHAR2(36), -- 글쓴이 (FK)
    MESSAGE_REG_DATE DATE, -- 작성일
    MESSAGE_CONTENT VARCHAR2(500), -- 내용
    MESSAGE_EDITED NUMBER, -- 편집 여부 디폴트0
    MESSAGE_REPLY_TO VARCHAR2(36), -- 답글 메세지의 id(없으면 null) (FK)
    MESSAGE_PING NUMBER, -- 답글 핑 여부 답글이 아니면 무조건 0
    PRIMARY KEY (MESSAGE_ID),
    FOREIGN KEY (MESSAGE_CHANNEL)
        REFERENCES CHANNEL(CHANNEL_ID)
        ON DELETE CASCADE,
    FOREIGN KEY (MESSAGE_USER)
        REFERENCES APPUSER(APPUSER_ID)
        ON DELETE CASCADE,
    FOREIGN KEY (MESSAGE_REPLY_TO)
        REFERENCES MESSAGE(MESSAGE_ID)
        ON DELETE CASCADE,
    FOREIGN KEY (MESSAGE_GROUP_CHAT)
        REFERENCES GROUP_CHAT(GROUP_CHAT_ID)
        ON DELETE CASCADE
);

CREATE VIEW DISPLAY_MESSAGE AS -- 디스플레이 메세지 뷰
SELECT MESSAGE_ID DISPLAY_MESSAGE_ID, -- 메세지 아이디
 MESSAGE_USER DISPLAY_MESSAGE_USER, --  글쓴이
 MESSAGE_CONTENT DISPLAY_MESSAGE_CONTENT, -- 내용
 MESSAGE_REG_DATE DISPLAY_MESSAGE_REG_DATE, -- 작성일
 SERVER_MEMBER_SERVER DISPLAY_MESSAGE_SERVER, -- 서버
 SERVER_MEMBER_USER_NAME DISPLAY_MESSAGE_USER_NAME, -- 서버 유저네임
 SERVER_MEMBER_PFP DISPLAY_MESSAGE_PFP, -- 서버 프사
 MESSAGE_CHANNEL DISPLAY_MESSAGE_CHANNEL, -- 체널
 MESSAGE_GROUP_CHAT DISPLAY_MESSAGE_GROUP_CHAT, -- 그룹
 MESSAGE_EDITED DISPLAY_MESSAGE_EDITED, -- 편집 여부
 MESSAGE_REPLY_TO DISPLAY_MESSAGE_REPLY_TO, -- 답글 
 MESSAGE_PING DISPLAY_MESSAGE_PING -- 핑 여부
 FROM MESSAGE JOIN CHANNEL ON MESSAGE.MESSAGE_CHANNEL = CHANNEL.CHANNEL_ID JOIN SERVER_MEMBER ON CHANNEL.CHANNEL_SERVER = SERVER_MEMBER.SERVER_MEMBER_SERVER
WHERE  MESSAGE.MESSAGE_USER = SERVER_MEMBER_USER; 

CREATE VIEW GROUP_MESSAGE AS  -- 그룹 메세지 뷰
SELECT 
MESSAGE_ID GROUP_MESSAGE_ID,
MESSAGE_USER GROUP_MESSAGE_USER,
MESSAGE_CONTENT GROUP_MESSAGE_CONTENT,
MESSAGE_GROUP_CHAT GROUP_MESSAGE_GROUP,
MESSAGE_REG_DATE GROUP_MESSAGE_REG_DATE,
MESSAGE_REPLY_TO GROUP_MESSAGE_REPLY_TO,
MESSAGE_EDITED GROUP_MESSAGE_EDITED,
MESSAGE_PING GROUP_MESSAGE_PING,
APPUSER_DISPLAY_NAME GROUP_MESSAGE_NAME,
APPUSER_GEN_PFP GROUP_MESSAGE_PFP
FROM MESSAGE JOIN APPUSER ON MESSAGE_USER = APPUSER_ID WHERE MESSAGE_GROUP_CHAT IS NOT NULL
ORDER BY MESSAGE_REG_DATE DESC;

CREATE TABLE MESSAGE_MEDIA( -- 메세지 미디어
    MESSAGE_MEDIA_ID VARCHAR2(36), -- 미디어 아이디 (PK)
    MESSAGE_MEDIA_MESSAGE VARCHAR2(36), -- 소속 메세지 (FK)
    MESSAGE_MEDIA_FILE_NAME VARCHAR2(70), -- 파일 이름
    MESSAGE_MEDIA_TYPE VARCHAR2(30), -- 파일 타입
    MESSAGE_MEDIA_ORDER NUMBER, -- 순서
    PRIMARY KEY (MESSAGE_MEDIA_ID),
    FOREIGN KEY (MESSAGE_MEDIA_MESSAGE)
        REFERENCES MESSAGE(MESSAGE_ID)
        ON DELETE CASCADE
);

CREATE TABLE REACTION( -- 리액션
    REACTION_ID VARCHAR2(36), -- 리액션 아이디 (PK)
    REACTION_SERVER VARCHAR2(36), -- 리액션 소속 서버 (FK)
    REACTION_NAME VARCHAR2(40), -- 리액션 이름
    REACTION_FILE VARCHAR2(50), -- 리액션 파일
    REACTION_REG_DATE DATE, -- 리액션 등록 날짜
    PRIMARY KEY(REACTION_ID),
    FOREIGN KEY (REACTION_SERVER)
        REFERENCES SERVER(SERVER_ID)
        ON DELETE CASCADE,
    CONSTRAINT REACTION_NAME_UK UNIQUE(REACTION_NAME, REACTION_SERVER)
);

CREATE TABLE REACTION_LOG( -- 리액션 로그
    REACTION_LOG_REACTION VARCHAR2(36), -- 리액션 
    REACTION_LOG_MESSAGE VARCHAR2(36), -- 리액션 보낼 메세지 
    REACTION_LOG_REACTOR VARCHAR2(36), -- 리액션 보낸이 
    -- PK, FK: 리액션, 보낸이, 메세지
    PRIMARY KEY(REACTION_LOG_REACTION, REACTION_LOG_MESSAGE , REACTION_LOG_REACTOR),
    FOREIGN KEY (REACTION_LOG_REACTION)
        REFERENCES REACTION(REACTION_ID)
        ON DELETE CASCADE,
    FOREIGN KEY (REACTION_LOG_MESSAGE)
        REFERENCES MESSAGE(MESSAGE_ID)
        ON DELETE CASCADE,
    FOREIGN KEY (REACTION_LOG_REACTOR)
        REFERENCES APPUSER(APPUSER_ID)
        ON DELETE CASCADE
);
